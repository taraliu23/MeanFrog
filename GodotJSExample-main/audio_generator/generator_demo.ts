import { AudioEffectSpectrumAnalyzer, AudioServer, AudioStreamGenerator, AudioStreamGeneratorPlayback, AudioStreamPlayer, Color, Label, Line2D, Node, Vector2 } from "godot";
import { onready } from "godot.annotations";
import { transform as fft } from "./fft";

const zzfxm = require("libs/zzfxm_gn");

// https://keithclark.github.io/ZzFXM/
class SongData {
    private _songs: any[] = [];

    access(index: number) {
        if (typeof this._songs[index] === "undefined") {
            if (typeof this._songs[index] === "undefined") {
                this._songs[index] = index == 0 ? {
                    // Song data for "I am back". Original song by Sky.
                    "name": "I am back",
                    "samples": [[[1.8, 0, 72, , , .2, , 4, -2, 6, 50, .15, , 6], [, 0, 655, , , .09, 3, 1.65, , , , , .02, 3.8, -.1, , .2], [1.2, 0, 23, , , .2, 3, 4, , , 3, .9, .05], [1.5, 0, 740, , , .15, 2, .2, -.1, -.15, 9, .02, , .1, .12, , .06]], [[[3, -1, 13, 13, 13, 8, 13, , , , , , , , , , , , 11, 11, 11, 6, 11, , , , , , , , , , , , 10, 10, 10, 6, 10, , , , , , , , , 6, 8, 10, 8, 8, 8, 5, 13, , 8, 8, 8, 5, 13, , , , , ,], [, 1, 25, , 25, , , , , , , , , , , , , 25, 25, , 25, , , , , , , 25, , , 25, , 25, 25, 25, , 25, , , , , , , , , , , 25, 25, 25, 25, , 25, , , , , , , , , , , , , ,], [2, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, , , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, ,]], [[3, -1, 13, 13, 13, 8, 13, , , , , , , , , , , , 11, 11, 11, 6, 11, , , , , , , , , , , , 10, 10, 10, 6, 10, , , , , , , , , 6, 8, 10, 8, 8, 8, 5, 13, , 8, 8, 8, 5, 13, 8, 8, 8, 5, 13], [2, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, 27, 11, , 23, , 11, 11, 23, 11, , 11, 23, 11, 11, 11, 23, 22, 18, , 30, , 18, 18, 30, 18, , 18, 30, 18, 18, 18, 30, 22, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, ,], [, 1, 25, , 25, , , , , , , , , , , , , 25, 25, , 25, , , , , , , , , , , , , , 25, , 25, , , , , , , , , , , 25, 25, 25, 25, , 25, , , , , , , , , , , , , ,], [1, 1, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , 13, 13, 13, 13, 13, 13, 13, 13]], [[3, -1, 13, 13, 13, 8, 13, , 13, 15, 17, 17, 15, 13, 20, 20, 18, 17, 18, , , , 17, , 15, , , , 17, , 18, , 22, 22, 22, , 18, , , , 25, 25, 25, , 22, , , 18, 20, 22, 20, , , , , , , , , , , , , , , ,],
                    [2, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, 27, 11, , 23, , 11, 11, 23, 11, , 11, 23, 11, 11, 11, 23, 22, 18, , 30, , 18, 18, 30, 18, , 18, 30, 18, 18, 18, 30, 22, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, ,], [, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , ,], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13]], [[3, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 11, , 23, , 11, 11, 23, 11, , 11, 23, 11, 11, 11, 23, , 10, , 22, , 10, 10, 22, 10, , 10, 22, 10, 10, 6, 8, 10, 20, 25, 20, 20, 25, 20, , 20, 25, 20, 20, 20, 25, , 20, ,], [2, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, ,],
                    [, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , ,], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13]], [[3, -1, 13, , , , , , 8, , 17, 15, 13, , 17, 15, 13, , 15, , , , 10, 13, 15, 10, 13, 15, 10, 13, 15, 10, 13, 15, 12, , , , , , 8, 15, , , , , 17, 15, 13, 8, 13, , , , , , 10, 8, , 20, 20, 20, 20, 20, 20, 20], [2, -1, 13, , 25, , 13, 13, 25, 13, , 13, 25, 13, 13, 13, 25, , 15, , 27, , 15, 15, 27, 15, , 15, 27, 15, 15, 15, 27, 32, 20, , 32, , 20, 20, 32, 20, , 20, 32, 20, 20, 20, 32, , 13, , 25, , 13, 13, 25, 20, , 20, 32, 20, 20, 20, 32, ,], [, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , ,], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13]], [[3, -1, 13, , , , , , 8, , 17, , , , 18, 17, 15, , 18, , , , 13, , , , 10, , , , 6, , , , 8, 12, 15, 12, 20, , 8, 12, 15, 12, 20, , 22, 20, 15, , 13, , , , , , 10, , 8, , , , , 8, 20, 8], [2, -1, 13, , 25, 25, 13, , 25, 25, 13, , 25, 25, 13, , 25, 25, 15, , 27, 27, 15, , 27, 27, 15, , 27, 27, 15, , 27, 27, 20, , 32, 32, 20, , 32, 32, 20, , 32, 32, 20, , 32, 32, 13, , 25, 25, 13, , 25, 25, 20, , 32, 32, 20, , 32, 34], [, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , ,], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13]], [[3, -1, 13, , , , , , 8, , 17, , , , 18, 17, 15, , 18, , , , 13, , , , 10, , , , 6, , , , 8, 12, 15, 12, 20, , 8, 12, 15, 12, 20, , 22, 20, 15, , 13, , , , , , 10, , 8, , , , , 8, 20, 8],
                    [, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , ,], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13]], [[, 1, 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , , , 25, 25, , 25, 25, , , , , , 25, , , , 25, , , 25, , , , 25, 25, 25, 25, 25], [1, 1, , , , , 13, , , , , , , , 13, , , , , , , , 13, , , , , , , , 13, , 13, , , , , , 13, , , , , , , , 13, , , , , , , , 13, 13, , 13, , 13, 13, 13, 13, 13, 13, 13]]], [0, 1, 2, 2, 3, 3, 2, 2, 4, 4, 5, 6, 6, 7, 2, 2, 3]],
                } : {
                    // Song data for "Sanxion (Loader)". Original song by Rob Hubbard.
                    "name": "Sanxion",
                    "samples": [[[.4, 0, 1e4, , , , , , , , , , .01, 6.8, -.2], [1.4, 0, 84, , , , , .7, , , , .5, , 6.7, 1, .01], [, 0, 60, , .1, , 2], [2, 0, 360, , , .12, 2, 2, , , , , , 9, , .1], [.75, 0, 586, , , .25, 6], [2, 0, 360, , , .375, 2, 3.5], [1.2, 0, 490, , .25, .45, , , , , , , .2, , , , , , , .1], [.75, 0, 386, , , .25, 6]], [[[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20], [, 1, 32, 22, 22, 32, 32, 22, 32, 27, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 27, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 27, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.5, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.5, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.5, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [4, 1, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , 24.75, 20.75, , , , , , , 24.75, 20.75, , , , 21.75, 20.75, , 24.75, 20.75, , , , , , , 24.75, 20.75, , , , 21.75, 20.75]], [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 6, , , , , , 6, , 6, , , , , , 6, , 13, , , , , , 13, , 13, , , , , , 13, , 8, , , , , , 8, , 8, , , , , , 8, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 6, , 25, 13, 13, 25, 13, , 13, , 25, 13.75, 13, 25, 13, , 25, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [5, 1, 20, 20, 15, , 18, , 13, 15, , 11, , 6, 8, , 18, 20, 11, 11, 13, , 10, , 13, 18, 23, 23, 22, , 18, , 13, , 11, 11, 13, , 25, , 11, 13, 25, 25, 11, , 13, , 6, , 8, , , , , , , , , , , , , , , ,]],
                    [[, -1, 6, , , , , , 6, , 6, , , , , , 6, , 11, , , , , , 11, , 11, , , , , , 11, , 13, , , , , , 13, , 13, , , , , , 13, , 8, , , , , , 8, , 8, , , , , , 8, ,], [2, -1, , 18, 6, 6, 18, 6, , 6, , 18, , 6, 18, 6, , 6, , 23, 11, 11, 23, 11, , 23, , 23, , 11, 23, 11, , 11, , 25, 13, 13, 25, 13, , 13, , 25, 13.75, 13, 25, 13, , 25, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [5, 1, 18, 18, 13, , 11, , 10, 11, , 11, , 13, 10, , 11, 13, 23, 23, 22, , 18, , 13, , 11, 10, , 18, 11, , 11, 18, 11, 11, 13, , 25, , 18, 23, 25, 23, 18, , 23, 23, 18, , 20, , 20, 18, 11, , 6, 8, , , , , , , , ,]], [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.5, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.5], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,]], [[, -1, 11, , , , , , 11, , 11, , , , , , 11, , 11, , , , , , 11, , 11, , , , , , 11, , 16, , , , , , 16, , 16, , , , , , 16, , 16, , , , , , 16, , 16, , , , , , 16, ,], [2, -1, , 23, 11, 11, 23, 11, , 11, , 23, , 11, 23, 11, , 23, , 23, 11, 11, 23, 11, , 11, , 23, , 11, 23, 11, , 11, , 28, 16, 16, 28, 16, , 16, , 28, , 16, 28, 16, , 16, , 28, 16, 16, 28, 16, , 16, , 28, , 16, 28, 16, , 16], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25],
                    [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 15, , , , , , , , , , , , , , , , 18, , , , , , , , , , , , 15, 18, 15, 18, 18, , , , 20, , , , , , , , , , , , 23, , , , , , , , , , , , 20, 23, 20, 23]], [[, -1, 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 15, , , , , , 15, , 15, , , , , , 15, , 15, , , , , , 15, , 15, , , , , , 15, ,], [2, -1, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 13, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 25, , 27, 15, 15, 27, 15, , 27, , 27, , 15, 27, 15, , 15, , 27, 15, 15, 27, 15, , 27, , 27, , 15, 27, 15, , 15], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 25, , , , , , , , , , , , , , , , , , , , , , , , , , , , 20, 23, 25, , 27, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,]], [[2, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [4, 1, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, , , , , , , , ,], [7, 1, , , , , , , , , , , , , , , , , , , , , , , , , 18, 18, , 18, 13, 13, 10, 10]], [[, -1, 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, ,], [2, -1, , 16, 4, 4, 16, 4, , 16, , 16, , 4, 16, 4, , 16, , 16, 4, 4, 16, 4, , 4, , 16, , 4, 16, 4, , 4, , 25, 13, 13, 25, 13, , 13, , 25, , 13, 25, 13, , 13, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 13], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32],
                    [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 4, , , , , , 11, , , , , , 16, , , , 21, , , , , , 20, , , , , , 20, , , , 11, , , , , , 13, , , , , , 13, , , , 11, , , , , , 13, , , 13, , , 11, 11, 13, 13]], [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 8, , , , , , 18, , , , , , , , , , 11, , , , , , 22, , , , , , , , , , , , , , 18, , , , , , , , , , , , 18, 18, 18, 18, 18, 18, 18, 18, 20, 20, 20, 20, 18, 18, 18, 18]], [[, -1, 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, ,], [2, -1, , 16, 4, 4, 16, 4, , 16, , 16, , 4, 16, 4, , 16, , 16, 4, 4, 16, 4, , 4, , 16, , 4, 16, 4, , 4, , 25, 13, 13, 25, 13, , 13, , 25, , 13, 25, 13, , 13, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 13], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25],
                    [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 4.25, , , , 16, , 16, , , , , , , , 16, , , , 18, , 15, , , , 13, , 11, , , , , , 1, , , , 16, , 16, , , , , , , , 21, , , , 23, , 20, , , , 18, , 16, , 11, , 9, ,]], [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 11, , , , , , 9, , , , , , 8, , , , 16, , , , , , 15, , , , , , 15, , , , 6, , , , , , 13, , , , , , 18, , , , 23, 22.5, 22.5, 22.37, 22.37, 22.5, 22.5, 22.37, 22.37, 22.5, 22.5, 22.37, 22.37, 22.5, 22.5, 22.37]], [[, -1, 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, ,], [2, -1, , 16, 4, 4, 16, 4, , 16, , 16, , 4, 16, 4, , 16, , 16, 4, 4, 16, 4, , 4, , 16, , 4, 16, 4, , 4, , 25, 13, 13, 25, 13, , 13, , 25, , 13, 25, 13, , 13, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 13], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 4, , , , , , , , , , , , , , , , , 16, 16, 16, 15, 16, 16, 16, 15, 16, 16, 16, 4, , 6, , 8, , , , , , , , , , , , , , , , , 20, 20, 20, 19, 20, 20, 20, 19, 20, 20, 20, 8, , 9, ,]],
                    [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 20, , , , , , 21, , , , , , 20, , , , 16, , , , 15, , 11, , , , 8, , , , , , 6, , , , , , 13, , , , , , 18, , , , 30, , , , , , 25, , 23, , 22, , 18, , 13, ,]], [[, -1, 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 4, , , , , , 4, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, , 13, , , , , , 13, ,], [2, -1, , 16, 4, 4, 16, 4, , 16, , 16, , 4, 16, 4, , 16, , 16, 4, 4, 16, 4, , 4, , 16, , 4, 16, 4, , 4, , 25, 13, 13, 25, 13, , 13, , 25, , 13, 25, 13, , 13, , 25, 13, 13, 25, 13, , 25, , 25, , 13, 25, 13, , 13], [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 4.25, , 3, , 4, , 11, , 16, , , , 23, , 20, , 8, , 8.25, , 20, , , , 21, , , , 23, , , , , , , , 23, , , , 21, , , , 20, , 8, 8, 8, 1, 3, , 4, , 8, , 13, , 16, , 20, , 21, ,]], [[, -1, 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 8, , , , , , 8, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, , 6, , , , , , 6, ,], [2, -1, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 20, , 20, 8, 8, 20, 8, , 8, , 20, , 8, 20, 8, , 8, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18, , 18, 6, 6, 18, 6, , 18, , 18, , 6, 18, 6, , 18],
                    [, 1, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32, 32, 22, 22, 32, 32, 22, 32, 22, 32, 22, 22, 32, 32, 22, 32, 32], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,], [6, 1, 11, , , , , , , , , , , , , , , , , 23, 23, 23, 22, 23, 21, , 20, , 15, , 11, , 8, , 6, , , , , , 8, , , , , , 10, , , , 11, , , , , , 13, , , , , , 16, , , ,]], [[4, -1, 15, 15, 15, , 15, , 15, 15, , 15, , 15, 15, , 15, 15, 15, 15, 15, , 15, , 15, 15, 27, 15, , 15, 15, , 15, 15, 15, 15, 15, , 15, , 15, 15, 15, 15, 15, , 15, 15, 15, , 15, , 15, 15, 15, , 15, 15, , , , , , , , ,], [1, -1, 20, , , 20, , , 20, 22.5, 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25, 20, , , 20, , , 20, , 20, , , 20, , , 20, 20.25], [, -1, , 22, 22, , , 22, , , , 22, 22, , , 22, , , , 22, 22, , , 22, , 22, , 22, 22, , , 22, , , , 22, 22, , , 22, , 22, , 22, 22, , , 22, , , , 22, 22, , , 22, , 22, , 22, 22, , , 22, , ,], [3, -1, , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , , , , , , 32, , , ,]]], [0, 1, 2, 3, 2, 4, 5, 6, 1, 2, 3, 7, 10, 9, 8, 13, 12, 11, 14, 4, 5, 15, 6]]
                };
            } else if (index == 1) {

            }
        }
        return this._songs[index];
    }
}

const FFT_SIZE = 1024;

class Visualizer {
    private resolution = 32;
    private real: Array<number> = [];
    private imag: Array<number> = [];
    private cache: Array<number> = [];
    private dirty = false;

    private get_level(index: number, rf: number) {
        let value = 0;
        for (let i = 0; i < rf; ++i) {
            let e = index * rf + i;
            if (e >= this.real.length) break;
            value += Math.sqrt(this.real[e] * this.real[e] + this.imag[e] * this.imag[e]);
        }
        // return Math.max(0, Math.min(20, (value / rf) / 20)); 
        return Math.max(0, Math.min(2, (value / rf) / 6)); // scale and trunc 
    }

    setup(samples: Array<number>) {
        this.real = samples;
        this.dirty = true;
    }

    get results(): Array<number> {
        if (this.dirty) {
            this.dirty = false;
            this.imag.fill(0);
            fft(this.real, this.imag);

            const rf = Math.floor(this.real.length / this.resolution);
            for (let i = 0; i < this.resolution; ++i) {
                this.cache[i] = this.get_level(i, rf);
            }
        }

        return this.cache;
    }
}

/**
 * Audio Generator Demo (TypeScript version)
 *  This is a demo showing how one can generate and play audio samples from TypeScript.  
 * 
 * @link https://godotengine.org/asset-library/asset/526
 */
export default class AudioGeneratorDemo extends Node {
    @onready("Player")
    player!: AudioStreamPlayer;

    private left = new Visualizer();
    private right = new Visualizer();
    private playback!: AudioStreamGeneratorPlayback;
    private current_song = -1;
    private loading_tag = 0;
    private loading = false;

    // use cached Vector2 to avoid unnecessary garbages 
    private cached_frame = new Vector2();
    private frame_index = 0;

    private data = new SongData();
    private timer?: NodeJS.Timeout;

    _ready(): void {
        // this.buffer = zzfx.generate(1.74,.05,598,.09,.26,.41,0,.24,0,0,-46,.07,.17,0,0,0,.09,.42,.28,.06);
        (<AudioStreamGenerator>this.player.stream).mix_rate = zzfxm.zzfxR;
        this.player.play();
        this.playback = <AudioStreamGeneratorPlayback>this.player.get_stream_playback();
        this.timer = setInterval(() => {
            this.draw("Left", this.left, Color.RED);
            this.draw("Right", this.right, Color.BLUE);
        }, 100);
        this.load_song(0);
    }

    on_play_first_song() {
        this.load_song(0);
    }

    on_play_second_song() {
        this.load_song(1);
    }

    private async load_song(index: number) {
        if (this.current_song === index) {
            return;
        }

        this.current_song = index;

        const tag = ++this.loading_tag;
        const info = this.data.access(this.current_song);
        if (typeof info.fully_loaded === "undefined") {
            this.loading = true;
            this.on_song_changed();

            const galop = 10_000;
            const gen = zzfxm.default(...info.samples);
            info.cache = gen.next().value;
            for (let i = 0; ; ++i) {
                let res = gen.next();

                if (res.done) {
                    console.log("song generation done:", info.name);
                    info.fully_loaded = true;
                    if (tag === this.loading_tag) {
                        this.loading = false;
                        this.on_song_changed();
                    }
                    break;
                }
                if (tag !== this.loading_tag) {
                    console.log("song generation cancelled:", info.name);
                    return;
                }
                if (!(i % galop)) {
                    const label = <Label>this.get_node("SongName");
        
                    label.text = this.loading ? `${info.name} (loading... ${i / galop})` : info.name;
                    await new Promise(resolve => setTimeout(resolve, 0));
                }
            }
        }
    }

    private on_song_changed() {
        const label = <Label>this.get_node("SongName");
        const info = this.data.access(this.current_song);

        label.text = this.loading ? `${info.name} (loading...)` : info.name;
    }

    private draw(group_name: string, vs: Visualizer, color: Color) {
        let node = this.get_node(group_name);
        let results = vs.results;
        for (let i = 0; i < results.length; ++i) {
            let line = <Line2D>node.get_child(i);
            if (typeof line === "undefined") {
                break;
            }
            let mag = results[i];
            let point = line.get_point_position(0);
            point.y = (1 - mag) * 100;
            line.set_point_position(0, point);
            line.default_color = color;
        }
    }

    _exit_tree(): void {
        if (typeof this.timer !== "undefined") {
            clearInterval(this.timer);
            this.timer = undefined;
        }
    }

    _process(delta: number): void {
        let info = this.data.access(this.current_song);
        if (this.loading && (typeof info.cache === "undefined" || info.cache[0].length < 100_000)) {
            return;
        }

        let to_fill = this.playback.get_frames_available();
        let song = info.cache;

        while (to_fill > 0) {
            this.frame_index = (this.frame_index + 1) % song[0].length;

            this.cached_frame.x = song[0][this.frame_index];
            this.cached_frame.y = song[1][this.frame_index];
            this.playback.push_frame(this.cached_frame); // Audio frames are stereo.

            // IT'S FINE to directly use `new` here if PERFORMANCE is NOT critically affected in practice :P
            // (but always be cautious especially in a `_process` call, it's similar with gc alloc in Unity)
            // this.playback.push_frame(new Vector2(song[0][this.frame_index], song[1][this.frame_index]));

            --to_fill;
        }

        if (true) {
            let frame = this.player.get_playback_position() * zzfxm.zzfxR;
            this.left.setup((<Array<number>>song[0]).slice(frame, frame + FFT_SIZE));
            this.right.setup((<Array<number>>song[1]).slice(frame, frame + FFT_SIZE));
        }
    }
}
